# This is a GitHub CI workflow for the NCEPLIBS-bufr project.
#
# This workflow tests on the Intel compiler.
#
# Ed Hartnett, 1/10/23
name: Intel
on:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

# Use custom shell with -l so .bash_profile is sourced which loads intel/oneapi/setvars.sh
# without having to do it in manually every step
defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:
  Intel:
    runs-on: ubuntu-latest
    env:
      CC: icc
      FC: ifort

    steps:

    # See https://software.intel.com/content/www/us/en/develop/articles/oneapi-repo-instructions.html
    - name: install-intel
      run: |
        cd /tmp
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
        sudo apt-get update
        sudo apt-get install intel-oneapi-dev-utilities intel-oneapi-mpi-devel intel-oneapi-openmp intel-oneapi-compiler-fortran intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
        echo "source /opt/intel/oneapi/setvars.sh" >> ~/.bash_profile

    - name: checkout
      uses: actions/checkout@v2
      with:
        path: bufr
        submodules: true

    - name: cache-data
      id: cache-data
      uses: actions/cache@v2
      with:
        path: ~/data
        key: data-4

    - name: build
      run: |
        cd bufr
        mkdir build
        cd build
        cmake -DTEST_FILE_DIR=/home/runner/data -DCMAKE_INSTALL_PREFIX=./install -DENABLE_PYTHON=OFF ..
        make -j2 VERBOSE=1
        make install

    - name: test-bufr
      run: |
        cd bufr/build
        ctest --verbose --output-on-failure --rerun-failed

    - name: cache-data
      if: steps.cache-data.outputs.cache-hit != 'true'
      run: |
        mkdir ~/data
        cp $GITHUB_WORKSPACE/bufr/build/test/bufr-11.6.0.tgz ~/data
        
        
